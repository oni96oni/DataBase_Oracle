/*
INSERT INTO로 다른테이블에있는 정보를 새로만든 테이블에 옮겨주는 작업할때 타입,크기,순서 다 정확히 대응되어야한다.

그래서 이러한 과정이 귀찮으면 INSERT ALL을 사용한다.
기존에 생성되있던 테이블을 참조하는것. 
WHERE조건으로 1 = 0 같은걸 걸어서 테이블 구조만 복제하기위해서 값은 빼고 구조만 복제하는것

*/

SELECT * FROM EMP_COMMISSION;
SELECT * FROM EMP_NO_COMMISSION;

DROP TABLE EMP_COMMISSION;
DROP TABLE EMP_NO_COMMISSION;

DELETE FROM EMP_COMMISSION;
DELETE FROM EMP_NO_COMMISSION;

ROLLBACK;
COMMIT;

CREATE TABLE EMP_COMMISSION
	AS SELECT EMPLOYEE_ID
	 , FIRST_NAME
	 , LAST_NAME
	 , SALARY
	 , COMMISSION_PCT
  FROM EMPLOYEES
 WHERE 1 = 0;
 
CREATE TABLE EMP_NO_COMMISSION
	AS SELECT EMPLOYEE_ID
	, FIRST_NAME
	, LAST_NAME
	, SALARY
  FROM EMPLOYEES
 WHERE 1 = 0;

INSERT INTO EMP_COMMISSION( --이러한 작업할때 STATICS1에 UPDATED ROWS 확인하기.
	   SELECT EMPLOYEE_ID
	 , FIRST_NAME 
	 , LAST_NAME
	 , SALARY
	 , COMMISSION_PCT
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL
);

INSERT INTO EMP_NO_COMMISSION( --이러한 작업할때 STATICS1에 UPDATED ROWS 확인하기.
	   SELECT EMPLOYEE_ID
	 , FIRST_NAME 
	 , LAST_NAME
	 , SALARY
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NULL
);
 
INSERT ALL
  WHEN COMMISSION_PCT IS NOT NULL THEN
       INTO EMP_COMMISSION VALUES(EMPLOYEE_ID, FIRST_NAME, 이름, SALARY, COMMISSION_PCT)
  WHEN COMMISSION_PCT IS NULL THEN
  	   INTO EMP_NO_COMMISSION VALUES(EMPLOYEE_ID, FIRST_NAME, 이름, SALARY)
SELECT EMPLOYEE_ID, LOWER(FIRST_NAME) AS FIRST_NAME , LOWER(LAST_NAME) AS 이름, SALARY, COMMISSION_PCT
  FROM EMPLOYEES;
  
SELECT * FROM EMP_COMMISSION;
SELECT * FROM EMP_NO_COMMISSION;
ROLLBACK;
COMMIT;

SELECT * FROM USER_ALL_TABLES WHERE TABLE_NAME = 'EMP_COMMISSION';
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'EMP_COMMISSION';
SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME = 'EMP_COMMISSION';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMP_COMMISSION';

SELECT * FROM USER_ALL_TABLES WHERE TABLE_NAME = 'EMP_NO_COMMISSION';
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'EMP_NO_COMMISSION';
SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME = 'EMP_NO_COMMISSION';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMP_NO_COMMISSION';

/*
UPDATE시 컬럼수/순서 잘 매치시켜야하며 
단일행에대한 값이 나와야한다.

EMP_COMMISSION 테이블에서 모든 사원에 대해 COMMISSION_PCT를 0.02 증가 시킨다.

*/
UPDATE EMP_COMMISSION
   SET COMMISSION_PCT = COMMISSION_PCT + 0.02;
/*
EMP_NO_COMMISSION 테이블에서 SALARY가 4000 이하인 사원들에 대해 SALARY를 200 증가 시킨다.
 */
UPDATE EMP_NO_COMMISSION
   SET SALARY = SALARY + 200
 WHERE SALARY <= 4000;

SELECT * FROM EMP_COMMISSION;
SELECT * FROM EMP_NO_COMMISSION WHERE SALARY <= 4000;
ROLLBACK;
COMMIT;


SELECT * FROM EMP_COMMISSION WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);
SELECT * FROM EMP_NO_COMMISSION WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);


UPDATE EMP_COMMISSION
   SET SALARY = SALARY + 100
 WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);

/*위의 결과가 아래와 같다
UPDATE EMP_COMMISSION
   SET SALARY = SALARY + 100
 WHERE EMPLOYEE_ID IN (200, 201, 114 ,203 ,121, 103, 204, 145, 100); */

UPDATE EMP_NO_COMMISSION
   SET SALARY = SALARY + 100
 WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS WHERE MANAGER_ID IS NOT NULL);